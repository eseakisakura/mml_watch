　　■ PowerShell / FM Synthesis Chip - Tone Editor 


　　-- 当テキストは、構造化エディタで組まれてます。

　ちなみにスクリプト側も構造化エディタ対応です。--


 
　　□ 概要 


　　FM音源のレジスタ値や音色マトリクス指定を、
　スライダーで変更できるようにしたものです。

　VRC7,OPL,OPN,OPMの各マトリクスに対応し、
　変更のち、すぐに試聴できるのが特徴です。


　FM合成波形を視覚的に捉えられ、
　音色づくりに集中できるようにしました。


 
　　□ 注意点について 


　・ppmck,NSDlibのレジスタ記載によるvrc7音色を出力する場合、
　　メニューの切り換えが必要です。

　・fmp7,mxdrv形式のマトリクス音色出力を選択できますが、
　　内部的には、PMDによる変換となっています。


　・Operator ウィンドウの、各オペレータのADSRエンベロープ表示は、
　　実際の減衰率を再現したものではありません。

　・MaskとSSG-EG機能は、初期設定として起動し、opn,opm共用となっています。

　・SSG-EGのエンベロープ表示は、固定表示となってます。


　・FM合成のサイン波表示は、出力波形との擦り合わせを行ったため、
　　近似値は出てますが、完全な再現を目指したものではありません。

　・サイン波形のグラフ表示は、MLの倍数値が高いと誤差が出ます。
　　三角関数多用による演算負荷を軽減するため、float処理しているためです。


　・Multipleが 0.5倍のときは、
　　前半の波形のみ表示し、後半の波形は表示されません。

　　(この場合例えば、Modulator x2の1倍、Carrierも x2とすれば見れます。
　　倍周期ですが、前後半の波形が表示されます。

　　例 / [M:0.5, C:2] -> [M:1, C:4] / [M:4, C:0.5] -> [M:8, C:1])


　・もし起動できない場合は、
　　scriptフォルダのfm_editor.xml環境ファイルを削除して下さい。

　　初期設定と同じになります。



 
　　□ 基本設定 - クイックスタート 


　まず、環境設定から始めます。



　1.　fm_editorを起動し、オプションから settingをクリック、
　　　環境設定が立ち上がります。


　2.　各リストボックスに、必要となるファイル、プログラムを登録します。
　　　bin,player,dos,editorタブに、順に登録していきます。
　　　(PMDを64bitOSでの使用の場合、x64にチェックを入れて下さい。)


　3.　再生ボタンを押して、FM変調波の音が出れば基本的な設定は完了です。
　　　もし音が出ない場合は、オプションから、再生できるプレイヤーの選択をしてみて下さい。



 
　　□ 各機能の説明 


	 
　---- Tone Editor メインウィンドウ ---- 

　・autosave

　vrc7,opl,opn,opmの、最後の状態を保存します。

　(もし起動が不安定の場合、このオプションを外してみて下さい。
　リセット状態での起動となります。)


　・リセットパラメーター

　スライダーのパラメーターを初期状態に戻します。
　　

　・setting

　　環境設定です。
　　各リストボックスに、ファイルドロップで登録します。


　・4op Mask (PMDのみ対応します)

　試聴時に、オペレータマスクをします。
　チェックオフで、各オペレータをミュートします。


　試聴時に、SSG-EGを使用します。(PMD 4.8s以降のみ)

　ドロップダウンメニューで、EGタイプを選択、
　チェックオンで、各オペレータにSSG-EGをアサインします。
　(4.8r以前のPMDでは、Thruを選択して下さい。)


　・オクターブ

　試聴時のオクターブ指定です。


　・FM OP window

　FM Operator ウィンドウを起動します。


　・2op Type

　nsd, ppmck reg, nsd regの形式で表示できます。

　また、表示形式を切り換えた場合、
　各形式に対応したインポートもできます。


　・4op Style

　pmd, fmp7, mxdrvの形式で表示できます。

　また、表示形式を切り換えた場合、
　各形式に対応したインポートもできます。


　・Advanced(上級者向け)

　試聴する音を和音にしたい、時などに変更します。

　"mck_header"は、vrc7 mck の試聴mmlです。
　"nsd_header"は、vrc7 nsd の試聴mmlです。
　"pmd_header"は、opl,opn,opm の試聴mmlです。



　　・本体パネルの説明



　・各種スライダー

　基本的に左上側には、繊細な音色づくりに必要なもの、
　右下側に、変化の激しいものを集めています。


　・FMオペレーター / ロール選択

　オペレーターを切り換えます。
　切り換えるごとに、各オペレーターのスライダーを表示します。
　

　・FM音源チップ / ロール選択

　vrc7,opl,opn,opmを選択します。


　・再生ボタン

　試聴ボタンです。
　(音が出ない場合、プレイヤーアサインを確認して下さい。)

　(TextBoxにフォーカスあらば、[F12キー]
　各スライダーにフォーカスあらば、[Space,F12キー]を叩いても再生します。)


　・音色データインポートボタン

　FM音源チップの選択のち、
　音色データインポートボタン押すことで、数値を内部にインポートします。

　ボックスの値を、直接エディットした場合も、
　ボタンを押すことで、各スライダーに値を送り返すことができます。

　(TextBoxに変更あらば、[F5キー]でもインポートします。)


　・テキストボックス

　必要となる音色指定が出力されたり、
　必要となる音色データをインポートする場所です。



 
　---- Operator Mask ウィンドウ ---- 


　4op時、各オペレーターのマスクやSSG-EGを切り替えます。


　・Mask

　チェックoffで、オペレーター出力を停止します。


　・SSG-EG

　チェックonで、SSGエンベロープを使用します。

　ドロップダウンメニューから、SSGエンベロープフィルターを選択します。
　(PMD ver.4.8s以降であれば、適用できます。)


　※注 ---

　Op.を通常のエンベロープ状態に戻したいときは、
　Op.のチェックを入れたまま、0を選択し、再生して下さい。
、
　全てのssg Op.をチェックOffにしても、fm_editor側で、
　SE15,0を自動発行し、全てのOp.のSSG-EGが解除されます。

　(SE15,0 / ssg Op.全てon、フィルタ選択が 0の出力)


　(Thruの時は、演奏時、SEコマンド自体が発行されません。)


 
　---- Operator サブウィンドウ ---- 


　FM変調波形とエンベロープADSRを視覚的に見せるウィンドウです。


　ウィンドウ内にあるオペレータを、直接[マウスクリック]することで、
　エディットするオペレータの変更ができます。

　([右クリック]から、opのバルーン選択、アルゴリズム選択もできます。)


　・Property

　FM波形の精度を決めます。
　1/2精度では、サンプルポイントは 2px単位 80pointとなります。

　(精度の変更は、Editor本体のリスタートが必要となります。)


　・Adjust

　Sine波形のグラフ出力調整です。
　実際の音声出力に対し、グラフ表示と聴感とのズレを擦り合わせるためのものです。

　モジュレーションからキャリアへの、モジュレートレベルの変更を行います。
　(出力波形に近い値は、default値の24辺りとなります。)


　・Wait

　　Sine波形表示までのウェイトです。
　　1/1精度などの負荷が重い時、レスポンスの遅延タイムの指定をします。


  
　　□ Tips 


　・楽器ごとのアルゴリズム選択の目安


　0: ディストーションギター、チョッパーベース、ハイハット
　1: ハープ、PSG(programmable sound generator)
　2: ピアノ、ブラス、エレクトリックギター、ベース、ウッド
　3: ストリングス、チャイム、フォークギター
　4: コーラス、フルート、ベル、パスドラム、スネアドラム、タムタム
　5: ブラス、オルガン
　6: オルガン、シロホン、ビブラホン、ベースドラム、スネアドラム、タムタム
　7: パイプオルガン



　・2opでのBassの音づくり


　モジュレーションのマルチプルを0 (1/2波長)とし、
　トータルレベルを必要なだけ上げます。(15ぐらい)

　キャリアのマルチプルを上げて、(3くらい)必要となるハイトーンを足します。
　フィードバックで、エレクトリックベース感を足します。(4くらい)

　(キャリアで音量を決め、モジュレーションで音づくりが基本です。)



　・4opにおける、3op+ 1opでの楽器波形の再現例


　アルゴリズム2を使用します。
　主にop2とop3で音色となる倍音成分をつくります。

　op3のトータルレベルは、40とします。
　op2のトータルレベルを上げ、必要となる倍音成分を足します。

　op1とフィードバックを使い、波形全体をねじ曲げ、
　実音のサンプル波形に近づけます。


　モジュレーターのマルチプルの値は、キャリアに対して、
　1:1,3,5,整数倍音(ノコギリ波)、1:2,4,6,奇数倍音(矩形波)を意識することで、
　より楽器の音色に近づいていきます。


　後は、お好みで探求してみて下さい、、


 
　　□ Tips 


　・既存の音色データを使用して音づくりしたい


　テキストボックスから、設定値を取り込むことができます。
　(Val sound様のFM-Sound Libraryデータに対応しています。)

　テキストボックスに、FM音色マトリクスを流し込み、
　音色データインポートボタンを押して下さい。

　FM-Sound Libraryデータを読み込むときは、
　opnを選択、4op styleは、PMDとして下さい。

　opmを選択しているとカウント数エラーを返します。)


　4op style変更により、FMP7,MXDRV 各形式のインポートに対応します。
　出力された並べ順と同じ配置の入力値であれば、
　この形で、インポートします。

　(FMP7 opmの場合、音色データ形式のカウント数は、
　46(11*4+2)となります。


　正規表現(?<=^|;|:|,|\s)(?:-)?[0-9]+?(?=;|:|,|\s|\n|$)として、
　数値列を読み込む仕様です。

　(読み込み失敗は、必要な数値の前にスペースがないケースが多いです。)


　---- インポート例 ----

　opn / 4op style: PMD

  @100   5   5 # フィードバックベース[opn,o2]
    NM ALG  FB
 012 008 007 005 010 014 000 000 000 000
  21, 18, 10, 05, 08, 19, 00, 00, 00, 00,
  24, 12, 11,  5,  7, 20,  0,  3,  0,  0,
  19   6  18   5   7   0   0   5   0   0
  AR  DR  SR  RR  SL  TL  KS  ML  DT AMS

　---- ----

 
　　□ Tips 


　・テキストボックス出力のテンプレートを変更したい(上級者向け)


　"\mml_watch_gui\script\header"

　headerフォルダにある出力ファイルを、直接エディットすることで、
　テキストボックスに出力されるデータの変更ができます。
　(いずれも、fm editorリスタート時に適用されます)


　"fm_box_vrc"は、vrc7 の出力ファイルとなっています。
　"fm_box_opl"、"fm_box_opn"、"fm_box_opm"とそれぞれ対応します。


 
　　□ 仕様について 


　音色指定のマイナス値は 0に変換されます。

　opn,opmのDT1のvalueは、0 - 7の範囲で指定して下さい。
　テキストボックス内で、-3 -> +3として範囲指定を行うと、
　-3,-2,-1の値は 0に変換されます。


　グラフ表示は精度を下げると、
　プレイヤー出力に比べ、歪みが強く出る傾向があります。

　プレイヤーに線形補完やローパスフィルタが入っているケースでは、
　エディタの波形出力と実際の波形に幾分ずれが生じます。

　(フィードバックが、フィルタ発振の状態(2π,4πであっても、
　プレイヤー側の波形補完が入ると、穏やかな出力となることが分かってます。)

　[1/1精度のグラフ時に、PMDWin.dllの線形補完を外すと近似値が出るため。]



　以下、計算式の概略となります。

　---- デシベルから電圧・音圧比への変換式
  V2/V1 = 10^(A/20)
　v2= 10^(a/20)* v1
　v2= 10^(-0.75dB* TL/ 20)* v1

　---- 直列接続での、FM変調の計算式
　F(t)= A(t)* sin(ωct+ ( I(t)* sinωmt) )となっています。
　c:キャリア
　m:モジュレーション

　---- フィードバックの計算式
　F1(t)=  I(t)* sin( ωmt+β* F1(t) )としています。
　β:帰還率


 
　　□ 参照リンク 


　・Val sound FM-Sound Library / Takeshi Abo様
　　http://www.valsound.com/


　・PMDチャンネル / kaja様
　　https://www.youtube.com/channel/UC3Ytls4c0n_OpFFQQDXFYhA


 
　　□ 免責事項 /使用条件 /著作権など 


　・Apacheライセンス2.0を適用して下さい

　・当スクリプト群を使用して何らかの問題が起こっても、責任を要求しないこと

　・再配布する際は、当ドキュメントファイルを維持して下さい


　= 黄白紅藍玄 =
　https://twitter.com/huangbaihonglan

　Copyright(C) 04coreworks
　https://github.com/eseakisakura


　'19	2 28		F12キーで試聴できるようにした
	3 14		Operator windowを追加した
			別windowをshowdialogからshow/hideにした

	7 5		試聴mmlをheaderフォルダから読むようにした
			op2,3,4でもalg,fbを変えられるようにした

	8 5		2op時のwindowサイズを小さくした、描画のチラツキ少なくした
	10		サインカーブ計算の訂正

	11 17		テキストボックスからのインポートに対応した
			All_szをstring配列の読み込みにした
			描画レジューム位置の最適化をした

	22		sin波の合成時に、モジュレート調整ができるようにした
			sl値が逆だったので修正した
			描画修正時、必要となるall_chg抜けを直した
			プラグイン呼び出し対応のため、global:からscript:へ変更した

	26		フィードバックの構文を直した
			実測値に近いモジュレート出力に変更した
			グローバル変数を全て一か所に集めた

	28		x軸の色を黒からそれぞれのopに対応させた
			イベントにtry catch構文を加えた

	29		Op windowのマウスクリックでop,algを変更できるようにした

	12  1		サイン、エンベロープの座標のdot位置修正
			op2エンベロープのeg on時、計算間違い訂正
			カレントopに枠を付けた
	2		カラーobj減らし起動を速くした
			lightカラーの再調整
	5		if("") -> if('')と直した
	7		win10対応のため、eventスクリプトブロック内に$script:を挿入した
			win10対応のため、hash,xmlの左辺、script:スコープを見直した
			funcの引数を$x= $script:^^^として、funcへローカル登録とした
	16		contxt menuをチェック付きにした
	25		音色出力にゼロ埋めとアステリスクを付けられるようにした
	27		mmlwatchから呼び出し時、select機能の間違いを修正

　'20	1 10		2opのEGT表現の間違いを修正
	12		Advancedで試聴mmlを呼び出せるようにした
			preset音色追加
	16		Undoバッファ追加
	18		4opFM音色styleごとに入出力できるようにした
	22		vrc7のtype別レジスタ値を入出力できるようにした
	24		$0問題のため、-replaceを.Replaceへ変更、
			mckを試聴できるようにした
			Change_menuの-matchを.Containsへ変更
	31		GUI対応のエラー出力にした

	2 3		layout変更できるようにしたため、Chip_positionの追加
	2 5		必要となるUnredo 2の追加、mainのautosave読み出し修正、
			PointObjとしてfunc化、$boxs["wait"] valueを1,2,4へ変更
			Boxs_readでバラバラの変数をハッシュ化した
	2 8		遅延が出ていた$fm_boxを最適化した、Undoをobjにして高速化した
	27		autoloadの引数抜けと、$x.nameの$抜けエラー修正
			_vrcの空配列をコピーして使うようにした
			スタンドアロンにした、環境設定を自前でできるようにした。
	3 1		autosave機能のon,offをできるようにした
	5		インポート時のカウントチェックを厳密にした
	22		Op.maskウィンドウを追加した
	23		SSG-EGを指定できるようにした
	26		2.0以降のため、ClosingからFormClosingへ変更
	4 1		SSG-EGに固定エンベロープを付けた
	3		maskとSSG-EGの状態をマトリクスにコメント出力するようにした

 	
